function out = ADD_COORDINATES_BIPOLAR(out,coords)

% INPUTS:
% out: CCEPs output struct
% coords: coordinates structure generated by elec_info/get_all_mni_locs.m
% and elec_info/return_mni.m
%
% OUTPUTS:
% out: CCEPs output struct with the following changes:
% - .locs_monopolar: electrode coordinates added when available, corresponding to chLabels
% - .locs_bipolar: bipolar electrode pairs computed from locs_monopolar

%% select correct coordinates file for given patient, including if they have >1 implant
subj = strsplit(out.name,'_'); % get HUP ID
subj_idx = find(ismember({coords.info.name},subj{1}));
implant_idx = 1; 
if length(coords.info(subj_idx).elecs) > 1
    % take most recent implant  **** need better rule for this, probably
    % case by case
    %implant_idx = find(contains({coords.info(subj_idx).elecs.folder_name},'postrevision')); 
    implant_idx = 2;
end
coords_subj = coords.info(subj_idx).elecs(implant_idx);

%% reconcile coordinates between coordinate file and e-phys data

chLabels_coords = coords_subj.elec_names;
chLabels = out.chLabels;

out.locs_monopolar = nan(length(chLabels),3);
for ch = chLabels'
    
    if ismember(ch,chLabels_coords) % if there are coords available for channel
        ch_idx = find(strcmp(chLabels,ch)); % find channel idx in eeg data/out struct
        ch_idx_coords = find(strcmp(chLabels_coords,ch)); % find channel idx in eeg data/out struct
        if strcmp(chLabels{ch_idx},chLabels_coords{ch_idx_coords})
            out.locs_monopolar(ch_idx,:) = coords_subj.locs(ch_idx_coords,:);
        else
            error('ERROR: electrodes and coordinates not aligned correctly.') 
        end
    end
    
end

[out.locs_bipolar,~,~] = BIPOLAR_MONTAGE_COORDS(out.locs_monopolar,chLabels);
